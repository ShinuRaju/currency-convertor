{"version":3,"sources":["component/CurrencyRow.js","App.js","index.js"],"names":["CurrencyRow","props","currencyoptions","selectCurrency","onChangeCurrency","amount","onchangeAmount","className","type","name","id","value","onChange","map","items","App","toAmount","fromAmount","BASE_URL","useState","setcurrencyoptions","fromCurrency","setfromCurrency","toCurrency","settoCurrency","exchangeRate","setexchangeRate","setamount","amountInFromCurrency","setamountInFromCurrency","useEffect","a","axios","result","firstCurrency","Object","keys","data","rates","base","fetchitem","modifiedresult","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAgCeA,G,YA7BK,SAACC,GAAW,IAG5BC,EAKED,EALFC,gBACAC,EAIEF,EAJFE,eACAC,EAGEH,EAHFG,iBACAC,EAEEJ,EAFFI,OACAC,EACEL,EADFK,eAGF,OACE,sBAAKC,UAAU,eAAf,UACE,uBAAOC,KAAK,SAASC,KAAK,GAAGC,GAAG,GAAGC,MAAON,EAAQO,SAAYN,IAC9D,wBACEG,KAAK,WACLC,GAAG,GACHE,SAAUR,EACVO,MAAOR,EAJT,SAMGD,EAAgBW,KAAI,SAACC,GAAD,OACnB,wBAAoBH,MAAOG,EAA3B,SACGA,GADUA,a,gBC8ERC,MA/Ff,WAEE,IASIC,EAAUC,EATRC,EAAW,yCAFJ,EAIiCC,mBAAS,IAJ1C,mBAINjB,EAJM,KAIWkB,EAJX,OAK2BD,qBAL3B,mBAKNE,EALM,KAKQC,EALR,OAMuBH,qBANvB,mBAMNI,EANM,KAMMC,EANN,OAO2BL,qBAP3B,mBAONM,EAPM,KAOQC,EAPR,OAQeP,mBAAS,GARxB,mBAQNd,EARM,KAQEsB,EARF,OAS2CR,oBAAS,GATpD,mBASNS,EATM,KASgBC,EAThB,KAmEb,OAvDID,GACFX,EAAaZ,EACbW,EAAWX,EAASoB,IAGpBT,EAAWX,EACXY,EAAaZ,EAASoB,GAKxBK,qBAAU,YAEO,uCAAG,8BAAAC,EAAA,sEACKC,IAAOd,GADZ,OACVe,EADU,OAGVC,EAAgBC,OAAOC,KAAKH,EAAOI,KAAKC,OAAO,GACrDlB,EAAmB,CAACa,EAAOI,KAAKE,MAAd,mBAAuBJ,OAAOC,KAAKH,EAAOI,KAAKC,UAChEhB,EAAgBW,EAAOI,KAAKE,MAC5Bf,EAAcU,GACdR,EAAgBO,EAAOI,KAAKC,MAAMJ,IAPnB,2CAAH,qDAUfM,KAGC,IAEHV,qBAAU,WAEY,MAAhBT,GAAsC,MAAdE,GACX,uCAAG,4BAAAQ,EAAA,sEACaC,IAAM,GAAD,OAC7Bd,EAD6B,iBACZG,EADY,oBACYE,IAF9B,OACVkB,EADU,OAIhBf,EAAgBe,EAAeJ,KAAKC,MAAMf,IAJ1B,2CAAH,oDAOfiB,KAID,CAACnB,EAAcE,IAehB,sBAAKhB,UAAU,eAAf,UACE,oDACA,cAAC,EAAD,CACED,eAfyB,SAACoC,GAC9Bf,EAAUe,EAAEC,OAAOhC,OACnBkB,GAAwB,IAcpB3B,gBAAiBA,EACjBG,OAAQY,EACRd,eAAgBkB,EAChBjB,iBAAkB,SAACsC,GACjBpB,EAAgBoB,EAAEC,OAAOhC,UAG7B,qBAAKJ,UAAU,SAAf,eACA,cAAC,EAAD,CACED,eApBuB,SAACoC,GAC5Bf,EAAUe,EAAEC,OAAOhC,OACnBkB,GAAwB,IAmBpB3B,gBAAiBA,EACjBC,eAAgBoB,EAChBlB,OAAQW,EACRZ,iBAAkB,SAACsC,GACjBlB,EAAckB,EAAEC,OAAOhC,cCxFjCiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0a27810b.chunk.js","sourcesContent":["import React from 'react'\r\nimport './CurrencyRow.css'\r\n\r\nconst CurrencyRow = (props) => {\r\n  \r\n  const {\r\n    currencyoptions,\r\n    selectCurrency,\r\n    onChangeCurrency,\r\n    amount,\r\n    onchangeAmount,\r\n  } = props;\r\n  \r\n  return (\r\n    <div className=\"main-wrapper\">\r\n      <input type=\"number\" name=\"\" id=\"\" value={amount} onChange = {onchangeAmount}/>\r\n      <select\r\n        name=\"currency\"\r\n        id=\"\"\r\n        onChange={onChangeCurrency}\r\n        value={selectCurrency}\r\n      >\r\n        {currencyoptions.map((items) => (\r\n          <option key={items} value={items}>\r\n            {items}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrencyRow\r\n","import React,{useEffect, useState} from  'react'\nimport './App.css';\nimport CurrencyRow from './component/CurrencyRow';\nimport axios from 'axios'\n\n\nfunction App() {\n\n  const BASE_URL = \"https://api.exchangeratesapi.io/latest\";\n\n  const [currencyoptions, setcurrencyoptions] = useState([]);\n  const [fromCurrency, setfromCurrency] = useState();\n  const [toCurrency, settoCurrency] = useState();\n  const [exchangeRate, setexchangeRate] = useState()\n  const [amount, setamount] = useState(1);\n  const [amountInFromCurrency, setamountInFromCurrency] = useState(true)\n\n  let toAmount, fromAmount\n  if (amountInFromCurrency) {\n    fromAmount = amount;\n    toAmount = amount * exchangeRate\n  }\n  else{\n    toAmount = amount;\n    fromAmount = amount / exchangeRate;\n  }\n\n\n\n  useEffect(() => {\n     \n    const fetchitem = async () => {\n      const result = await axios (BASE_URL)\n      // console.log(result.data);\n      const firstCurrency = Object.keys(result.data.rates)[1];\n      setcurrencyoptions([result.data.base, ...Object.keys(result.data.rates)]);\n       setfromCurrency(result.data.base);\n       settoCurrency(firstCurrency);\n       setexchangeRate(result.data.rates[firstCurrency])\n    }\n\n    fetchitem();\n    \n  \n  }, [])\n\n  useEffect(() => {\n    \n    if (fromCurrency != null && toCurrency != null) {\n      const fetchitem = async () => {\n        const modifiedresult = await axios(\n          `${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`\n        );\n        setexchangeRate(modifiedresult.data.rates[toCurrency]);\n      };\n\n      fetchitem();\n    }\n    \n\n  }, [fromCurrency, toCurrency])\n\n\n  const handleFromAmountChange = (e) => {\n    setamount(e.target.value)\n    setamountInFromCurrency(true)\n  };\n\n  const handleToAmountChange = (e) => {\n    setamount(e.target.value);\n    setamountInFromCurrency(false);\n  };\n\n  return (\n    \n    <div className=\"main-wrapper\">\n      <h1>Currency Convertor</h1>\n      <CurrencyRow\n        onchangeAmount={handleFromAmountChange}\n        currencyoptions={currencyoptions}\n        amount={fromAmount}\n        selectCurrency={fromCurrency}\n        onChangeCurrency={(e) => {\n          setfromCurrency(e.target.value);\n        }}\n      />\n      <div className=\"equals\">=</div>\n      <CurrencyRow\n        onchangeAmount={handleToAmountChange}\n        currencyoptions={currencyoptions}\n        selectCurrency={toCurrency}\n        amount={toAmount}\n        onChangeCurrency={(e) => {\n          settoCurrency(e.target.value);\n        }}\n      />\n    </div>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}